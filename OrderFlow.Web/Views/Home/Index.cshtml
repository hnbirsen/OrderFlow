<main class="main">
	<header class="toolbar">
		<div class="title-area">
			<h1 class="title">Dashboard</h1>
		</div>
		<div class="right-actions">
			<div class="user">
				<div class="avatar" style="--bg:#E5E7EB">A</div>
				<div class="user-info">
					<div class="user-name">Admin</div>
					<div class="user-email">admin@orderflow.local</div>
				</div>
			</div>
		</div>
	</header>

	<section class="content">
		<div class="orders" style="padding:14px; display:grid; gap:14px; grid-template-rows:auto auto 1fr;">
			<div style="display:grid; grid-template-columns: repeat(4, 1fr); gap:14px;">
				<div class="card kpi"><div class="kpi-title">Total Orders</div><div class="kpi-value" id="kpiTotal">—</div></div>
				<div class="card kpi"><div class="kpi-title">Revenue</div><div class="kpi-value" id="kpiRevenue">—</div></div>
				<div class="card kpi"><div class="kpi-title">Paid</div><div class="kpi-value" id="kpiPaid">—</div></div>
				<div class="card kpi"><div class="kpi-title">Delivered</div><div class="kpi-value" id="kpiDelivered">—</div></div>
			</div>

			<div class="card" style="padding:14px;">
				<canvas id="ordersChart" height="120"></canvas>
			</div>

			<div class="card" style="padding:0;">
				<div class="orders-head">
					<div class="col">Recent Orders</div>
					<div class="col">Customer</div>
					<div class="col">Status</div>
					<div class="col col-right">Total</div>
					<div class="col">Date</div>
					<div class="col col-kebab" aria-hidden="true">⋯</div>
				</div>
				<div id="recentOrders" class="orders-body" role="list"></div>
			</div>
		</div>
	</section>
</main>

<aside id="detail" class="detail">
	<div class="detail-head">
		<div>
			<div class="detail-order">Overview</div>
			<div class="detail-meta"><span class="badge">Today</span></div>
		</div>
	</div>
	<div>
		<h3 class="section-title">Notes</h3>
		<ul class="item-list">
			<li class="item"><div class="thumb">🧭</div><div>Metrics are demo-only.</div><div></div></li>
		</ul>
	</div>
</aside>

@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.3/dist/chart.umd.min.js"></script>
	<script>
		(function(){
			const orders = Array.isArray(window.demoOrders) ? window.demoOrders : [];
			// KPIs
			const total = orders.length;
			const revenue = orders.reduce((s, o) => s + (o.items?.reduce((ss, it) => ss + Number(it.price||0), 0) || 0), 0);
			const paid = orders.filter(o => o.status === 'Paid').length;
			const delivered = orders.filter(o => o.status === 'Delivered').length;
			const fmt = new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'});
			const el = id => document.getElementById(id);
			if (el('kpiTotal')) el('kpiTotal').textContent = total;
			if (el('kpiRevenue')) el('kpiRevenue').textContent = fmt.format(revenue);
			if (el('kpiPaid')) el('kpiPaid').textContent = paid;
			if (el('kpiDelivered')) el('kpiDelivered').textContent = delivered;

			// Chart data by day
			const byDay = {};
			for (const o of orders){
				const d = new Date(o.date);
				const key = d.getFullYear()+"-"+(d.getMonth()+1).toString().padStart(2,'0')+"-"+d.getDate().toString().padStart(2,'0');
				byDay[key] = (byDay[key]||0) + 1;
			}
			const labels = Object.keys(byDay).sort();
			const data = labels.map(k => byDay[k]);
			const ctx = document.getElementById('ordersChart');
			if (ctx && window.Chart){
				new Chart(ctx, {
					type: 'line',
					data: { labels, datasets: [{ label: 'Orders', data, borderColor: '#2563eb', backgroundColor: 'rgba(37,99,235,0.15)', fill: true, tension: 0.35 }] },
					options: { plugins: { legend: { display: false } }, scales: { y: { beginAtZero: true } } }
				});
			}

			// Recent Orders
			const recent = [...orders].sort((a,b)=> new Date(b.date)-new Date(a.date)).slice(0,8);
			const list = document.getElementById('recentOrders');
			const mk = (t,c,txt)=>{const n=document.createElement(t); if(c) n.className=c; if(txt!=null) n.textContent=txt; return n;};
			const statusClass = (s)=> s==='Paid'?'paid':(s==='Completed'?'completed':(s==='Delivered'?'delivered':''));
			if (list){
				for (const o of recent){
					const row = mk('div','order-row');
					row.append(
						mk('div','col', o.id),
						(()=>{const c=mk('div','col'); const box=mk('div','customer'); const av=mk('div','avatar'); av.style.setProperty('--bg', o.customer.color); av.textContent=o.customer.initials; const name=mk('div'); name.appendChild(mk('div','name',o.customer.name)); box.append(av,name); c.appendChild(box); return c;})(),
						(()=>{const c=mk('div','col'); const badge=mk('span',`badge ${statusClass(o.status)}`,o.status); c.appendChild(badge); return c;})(),
						mk('div','col col-right', new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(o.total)),
						mk('div','col', new Intl.DateTimeFormat('en-US',{month:'short',day:'2-digit'}).format(new Date(o.date))),
						mk('div','col col-kebab kebab','⋯')
					);
					list.appendChild(row);
				}
			}
		})();
	</script>
}

<style>
	.card {
		background: #fff;
		border: 1px solid var(--ring);
		border-radius: var(--radius-lg);
	}

	.kpi {
		padding: 14px;
		display: grid;
		gap: 6px;
	}

	.kpi-title {
		color: var(--muted);
		font-size: 12px;
		font-weight: 600;
	}

	.kpi-value {
		font-weight: 800;
		font-size: 22px;
	}
</style>

